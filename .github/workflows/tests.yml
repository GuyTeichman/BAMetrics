name: Rust

on:
  push:
    branches: [ "main", "development" ]
  pull_request:
    branches: [ "main", "development" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
          os: [ ubuntu-latest, windows-latest, macos-latest ]

    steps:
    - name: Checkout repository
    - uses: actions/checkout@v3
    - name: Set up environment for code coverage
      run: |
        echo "CARGO_INCREMENTAL=0" >> $GITHUB_ENV
        echo "RUSTFLAGS=-Zinstrument-coverage" >> $GITHUB_ENV
        echo "LLVM_PROFILE_FILE=${{ github.workspace }}/coverage/%p-%m.profraw" >> $GITHUB_ENV
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Collecting code coverage
      run: |
        cargo install grcov
        grcov . -s . -t coveralls --llvm --branch --ignore-not-existing --output-path ./coverage.json --token ${{ secrets.COVERALLS_REPO_TOKEN }}
    - name: Upload coverage to Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ./coverage.json
        flag-name: run-${{ matrix.rust }}
        parallel: true
